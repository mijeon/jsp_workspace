/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-27 08:13:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.payment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jspshop.domain.Product;
import org.apache.ibatis.session.SqlSession;
import com.jspshop.repository.ProductDAO;
import com.jspshop.mybatis.MybatisConfig;
import com.jspshop.domain.Member;
import com.jspshop.domain.Cart;
import java.util.ArrayList;
import java.util.List;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	MybatisConfig mybatisConfig=MybatisConfig.getInstance();
	ProductDAO productDAO=new ProductDAO();

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jspshop.repository.ProductDAO");
    _jspx_imports_classes.add("com.jspshop.mybatis.MybatisConfig");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.jspshop.domain.Product");
    _jspx_imports_classes.add("com.jspshop.domain.Cart");
    _jspx_imports_classes.add("org.apache.ibatis.session.SqlSession");
    _jspx_imports_classes.add("com.jspshop.domain.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

	//클라이언트의 장바구니 등록 요청을 처리함
	
	//지금 요청이 만일 최초의 요청이라면 서버는 세션 객체 생성 및 ID 할당
	//최초 요청 여부 판단은 클라이언트의 브라우저에 흔적을 남긴 쿠키 ID 존재 여부로
	String sid=session.getId();
	System.out.println("이 요청에 대해 생성된 세션ID "+sid);
	
	//장바구니 목록을 표현하기 위한 순서있는 컬렉션인 리스트를 준비하자
	List<Cart> cartList=new ArrayList<Cart>();
	
	//List를 세션에 담지 않으면, service() 메서드의 지역변수이므로, 요청 시 마다 생성되어 소멸되기를 반복함 
	//따라서 생명을 유지할 수 있는 보다 전역적인 영역에 List를 보관해놓음 현재로서는 세션이 가장 적합
	//application : 이 객체에 담으면 톰캣이 꺼질 때까지 사용 가능
	//session : 세션이 끊길 때 (브라우저 닫거나 일정시간 요청이 없을 경우)
	//이미 cartList가 세션에 담겨있을 경우에는 덮어쓰지 말자
	if(session.getAttribute("cartList")==null){  //카트에 아예 없을 경우에만 담음
		session.setAttribute("cartList", cartList);
	}
	
	//원래는 로그인한 유저를 대상으로 하므로 session.getAttribute()에서 얻어와야함 (추후 진행)
	//Member member=new Member();
	//member.setMember_idx(1);  //임시데이터
	//member.setId("mijeon");
	
	//누가 
	//로그인한 유저를 대상으로 하므로 session.getAttribute()에서 얻어와야함
	Member member=(Member)session.getAttribute("member");
	
	//무엇을
	String product_idx=request.getParameter("product_idx");
	
	//주입
	SqlSession sqlSession=mybatisConfig.getSqlSession();
	productDAO.setSqlSession(sqlSession);
	
	//상품 정보 가져오기
	Product product=productDAO.select(Integer.parseInt(product_idx));
	
	//몇개나? 1개
	Cart cart=new Cart();  //empty
	cart.setMember(member);  //누가
	//cart.setProduct_idx(Integer.parseInt(product_idx));  //무엇을
	cart.setProduct(product);  //무엇을
	cart.setEa(1);  //목록을 통해 담을 경우엔 1개를 디폴트로 담음
	
	//한건의 장바구니 객체를 List에 담자
	List sessionCartList=(List)session.getAttribute("cartList");
	sessionCartList.add(cart);
	
	System.out.println("현재 장바구니에 "+sessionCartList.size()+"건이 담김");
	out.print("장바구니에 상품을 담았습니다.");

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
